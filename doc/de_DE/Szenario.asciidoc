==== Beschreibung
Das ist der wichtigste Teil einer Haus-Automatisierung: Die Szenarien. Das ist ein richtiges Gedächnis der Haustechnik, das ermöglicht, mit der wirklichen Welt auf "intelligente" Art und Weise zu interagieren. Ich habe versucht Jeedom so flexiebel wie möglich zu machen, das es so leicht wie möglich zu konfigurieren ist ohne den Benutzer einzuengen.

image::../images/scenario.JPG[]

Wie für die Ansicht auf der rechten Seite finden Sie die Liste der Szenarien (filterbar pro Gruppe) und verließ das Skript selbst, hier mehrere Teile :

- oben finden wir den allgemeinen Teil wieder:
- den Namen
- die Gruppe
- ob das Szenario aktiv ist oder nicht
- Die maximale erlaubt Ausführungszeit 
- Dann kommt der Teil der Auslöser, die können sein, ein oder mehrere Ereignisse und / oder eine Programmierung (eine bestimmte Zeit, eine Frequenz, dieser Teil ist mit einer Syntax wie crontab geschrieben) 
- Schließlich gibt es einen Informationteil der anzeigt, dass das Szenario ausgeführt worden ist (aktives Szenario), das letzte Mal ausgeführt worden ist, wenn er überprüft worden ist, sowie der gegenwärtiger Status ist 
- Man findet einige nützliche Aktionen oben rechts wieder: Kopieren,Vorlage,Export und Protokollieren eine szenarios
- Im unteren Teil befindet sich das Szenario wird, mit einer unbegrenzten Anzahl von Blöcken, die ineinander verschachtelt werden können.
* ist / dann / sonst: Grundstein für das Erreichen einer Bedingung
* Wiederholung: ermöglicht Schleifen auf eine definierte Nummer (oder einen Wert eines Sensors oder Zufallszahl)
* In: startet eine Aktion in X Minute(n) (0 ist ein möglicher Wert). Die Besonderheit ist, dass die Aktien im Hintergrund gestartet wird, so dass es nicht den Rest des Szenarios zu blockieren. Dies ist ein nicht-blockierender Block
* Code: PHP-Code können Sie direkt schreiben (es erfordert einige Kenntnisse und kann riskant sein, aber es ist erlaubt)

Für die Bedingungen habe ich versucht, es einzurichten, dass man sie am einfachsten schreiben kann und dabei flexibel ist. Man hat also einen Knopf, der ermöglicht, dann ein Gerät auszuwählen und man schreibt dann die Bedingung. Es gibt eine Wortliste für den Zugriff auf Variablen aus dem Skript oder andere, Zeit, Datum, eine Zufallszahl ....


Pour les actions on peut exécuter soit une action d’une commande (les options de celle-ci apparaitront sur sa droite, comme dans la capture tout en haut pour l’envoi de mail), soit une commande d’affectation de variable ou de pause (très pratique pour simuler la présence surtout couplé à la génération d’une durée aléatoire) ou même d’action sur un autre scénario (start, stop, activer, désactiver)


==== Auslöser
Es gibt bestimmte Auslöser (andere als die von den Befehle zur Verfügung):

- \#start#  :löst Jeedom(neu) starten aus
- \#user_connect#  :von einem Benutzer bei der Verbindung ausgelöst 

==== Bedingung oder Wert einer Aktionsbefehls
Seien Sie vorsichtig bei der Verwendung von Zeichenketten nehmen Sie `oder" (Zitat oder doppelte Anführungszeichen).Beispiel:"#[Object][Equipement][Info]#" = "oui"
Sie können irgendeiner Symbole entsprechend für die Operatoren benutzen:

- == : gleich
- > : größer
- >= : größer oder gleich
- < : kleiner
- <= : kleiner oder gleich
- != : unterschiedlich
- ~ : enthält
- !~ : enthält keine

Sie können jeden Operation mit den folgenden Operatoren kombinieren:

- && / ET / et / AND / and : und
- || / OU / ou / OR / or : oder
- |^ / XOR / xor : entweder oder

Außerdem können Sie mit den folgenden Tags:

- \#seconde# : Sekunde 
- \#heure# : Stunde (Bsp. : 17 als 17h15)
- \#minute# : Minute (Bsp. : 15 als 17h15)
- \#jour# : Tag
- \#mois# :  Monat
- \#annee# : Jahr
- \#time# : Stunde und Minute  (Bsp. : 1715 als 17h15)
- \#timestamp# : gibt die Anzahl der Sekunden seit dem 1. Januar 1970
- \#date# : Monat und Tag  (Bsp. : 1215 als 15 Dezember)
- \#semaine# : Nummer der Woche (Bsp. : 51)
- \#sjour# : für den Namen des Wochentages (Bsp : Samstag)
- \#njour# : Nummer des Tages von 0 (Sonntag) an 6  (Samstag)
- \#smois# : für den Namen des Monats (Bsp. : Januar)
- \#IP# : Interne Jeedom IP 
- \#hostname# : Name der Maschine Jeedoms 
- rand(1-10) : eine Zufallszahl von Januar bis Oktober
- average(commande,période) : gibt die durchschnittliche Zeit der Aufzeichnung in der (Periode = [Monat, Tag, Stunde, Minute])
    * Bsp. : average(\#[Bad][Hydrometrie][Luftfeuchtigkeit]#,1 Stunde) : Gibt den Durchschnitt des Aufzeichnung in der letzten Stunde
- min(commande,période) : gib das Minimum der Aufzeichnung während der Periode (period=[Monat,Tag,Stunde,Minute])
    * Bsp : min(\#[Badezimmer][Hydrometrie][Luftfeuchtigkeit]#,15 min) : Gibt das Minimum der Aufzeichnung in den letzten 15 Minuten
- max(commande,période) : donne le maximum de la commande sur la période (period=[Monat,Tag,Stunde,Minute])
    * Bsp : max(\#[Badezimmer][Hydrometrie][Luftfeuchtigkeit]#,7 Tage) : Gibt das maximum der Aufzeichnung über den letzten 7 Tagen
- averageBetween(commande,start,end) : gibt den Mittelwert der Steuerung zwischen 2 Termine erforderlich (in Form von Y-m-d H:i:s)
    * Bsp : averageBetween(\#[Badezimmer][Hydrometrie][Luftfeuchtigkeit]#,2015-01-01 00:00:00,2015-01-15 00:00:00) : durchschnittlich Referenz Wert zwischen dem 1. Januar 2015 und 15. Januar 2015
- maxBetween(commande,start,end) : gib das Maximum des Aufzeichnung zwischen den 2 gefragten Grenzen  (in Form von Y-m-d H:i:s)
    * Bsp : maxBetween(\#[Badezimmer][Hydrometrie][Luftfeuchtigkeit]#,2015-01-01 00:00:00,2015-01-15 00:00:00) : Gibt das Maximum der Steuerung zwischen dem 1. Januar 2015 und 15. Januar 2015
- minBetween(commande,start,end) : gibt die minimale Kontrolle zwischen den 2 Termine erforderlich (in Form von Y-m-d H:i:s)
    * Bsp : minBetween(\#[Badezimmer][Hydrometrie][Luftfeuchtigkeit]#,2015-01-01 00:00:00,2015-01-15 00:00:00) : Rücksendung, das Minimum am Aufzeichnung zwischen dem 1. Januar 2015 und dem 15. Januar 2015 
- tendance(commande,période,seuil) : gibt den Trend der Befehl über den Zeitraum (period=[Monat,Tag,Stunde,Minute])
    * Bsp : tendance(\#[Badezimmer][Hydrometrie][Luftfeuchtigkeit]#,1 Stunde,0.1) : Rückkehr 1, wenn die Erhöhung, so konstant 0 und -1, wenn abnehm
           Die Schwelle wird verwendet, um die sensibilität zu definieren. Achtung zur Berechnung der Schwelle wird die Formel vom Link verwendet: /http://fr.wikipedia.org/wiki/M%C3%A9thode_des_moindres_carr%C3%A9s[moindre carrés]
- variable(mavariable,valeur par default) : récupération de la valeur d'une variable ou de la valeur souhaitée par défaut
    * Bsp : variable(plop,10) gibt den Wert der Variablen plop oder 10, wenn es leer ist oder nicht n'Bspiste
- scenario(scenario) : liefert den Status des Skripts
    * Bsp : scenario(\#[Badezimmer][Lumière][Auto]#) : Gib 1 läuft 0, wenn gestoppt und -1, wenn deaktiviert, -2, wenn das Szenario ist nicht gefunden worden und -3, wenn die Bedingung nicht konsistent
- stateDuration(commande,[valeur]) : gibt die Zeit in Sekunden seit der letzten Wertänderung
    * Bsp : stateDuration(\#[Badezimmer][Hydrometrie][Luftfeuchtigkeit]#) : Referenz 300, ob dies der vergangenen 5min
- lastScenarioBspecution(scenario) : gibt die Zeit in Sekunden seit dem letzten Mal das Skript
    * Bsp : lastScenarioBspecution(\#[Badezimmer][Lumière][Auto]#) : Referenz 300, wenn das Skript zum letzten Mal dort 5min gestartet ist
- randomColor(min,max) : gibt eine zufällige Farbe zwischen 2 Anschlüssen ( 0 => Rot, 50 => Grün, 100 => Blau)
    * Bsp : randomColor(40,60) : Um eine zufällige Farbe nah an Grün zu erhalten
- trigger(commande) :ermöglicht, um den Verschluß des Szenarios kennen, oder ob es in der Befehlsparameter übergeben, die das Szenario Auslösen
    * Bsp : trigger(\#[Badezimmer][Hydrometrie][Luftfeuchtigkeit]#) : 1, wenn das wirklich ist  #[Badezimmer][Hydrometrie][Luftfeuchtigkeit]# welches Gerät ausschalten, wenn das Skript 0
- round(valeur,[decimal]) :ermöglicht Runden , [decimal] Anzahl der Nachkommastellen Dezimal
    * Bsp : round(\#[Badezimmer][Hydrometrie][Luftfeuchtigkeit]# / 10) : wird 9 zurückgeschickt falls die Feuchtigkeit einen prozentualen Anteil 85 hat
- odd(valeur) : gibt an, ob die Zahl ungerade ist oder nicht. Rückkehr 1, wenn ungerade sonst 0 
    * Bsp : odd(1) : Rückkehr 1
- median(commande1,commande2....commandeN) : liefert den Mittelwert
    * Bsp : median(15,25,20) :  Rückkehr 20
- time(value) : ermöglicht das Hinzufügen der #Zeit# mit einer Laufzeit
    * Bsp : time(\#time\# + 30) : wenn Rückkehr 16.50 : 1650 + 30 = 1720
- formatTime(time) : um die Rückkehr von einer Kette formatiert #time#
    * Bsp : formatTime(1650) : Rückkehr 16h50
- collectDate(cmd,[format]) : gibt das Datum der letzten für die gegebenen Parameter angegebenen Reihenfolge, der zweite optionale Parameter im Rückkehr-Format angeben(details link:http://php.net/manual/fr/function.date.php[ici]). Un retour de -1 signifi que la commande est introuvable, et -2 que la commande n'est pas de type info
    * Bsp : collectDate(\#[Badezimmer][Hydrometrie][Luftfeuchtigkeit]#) : Rückkehr 2015.01.01 17.45.12
            
==== Aktion
Neben der Haussteuerung können Sie folgende Funktionen haben: 

- sleep : Pause x Sekunde (n)
- wait : Warten, bis die Bedingung erfüllt ist (maximum 2h)                         
- variable : Erstellung / Änderung einer der Wert einer Variablen,
- scenario : ermöglicht die Kontrolle der Szenarien
- stop : Stoppt das Szenario
- icon : lässt Sie das Symbol des Szenarios ändern
- say : permet de faire dire un texte à jeedom (ne marche que si un onglet jeedom est ouvert dans le navigateur)
- return : gibt eine Meldung am Ende des Skripts wird nur verwendet, um eine bestimmte Nachricht nach einer Iteration zurück. Achten Sie darauf das das Kontrollkästchen "Führen Sie so schnell wie möglich" aktiviert ist, damit es funktioniert.
- gotodesign : ändert das Display-Design auf allen Browsern, angezeigt wird ein Design von dem ausgewählten Design
- log : ermöglicht, eine Nachricht in den Logs hinzuzufügen 
- message : ermöglicht einen Nachricht ins Nachrichtenzentrum hinzuzufügen
               
Sie können auch mit den folgenden Tags in den Einstellungen arbeiten : 

\#seconde# : Sekunde 
- \#heure# : Stunde (Bsp. : 17 als 17h15)
- \#minute# : Minute (Bsp. : 15 als 17h15)
- \#jour# : Tag
- \#mois# :  Monat
- \#annee# : Jahr
- \#time# : Stunde und Minute  (Bsp. : 1715 als 17h15)
- \#timestamp# : gibt die Anzahl der Sekunden seit dem 1. Januar 1970
- \#date# : Monat und Tag  (Bsp. : 1215 als 15 Dezember)
- \#semaine# : Nummer der Woche (Bsp. : 51)
- \#sjour# : für den Namen des Wochentages (ex : Samstag)
- \#njour# : Nummer des Tages von 0 (Sonntag) an 6  (Samstag)
- \#smois# : für den Namen des Monats (Bsp. : Januar)
- \#IP# : Interne Jeedom IP 
- \#hostname# : Name der Maschine Jeedoms 
- rand [1-10]: für eine Zufallszahl von Januar bis Oktober
- variable (meine Variable,Standardwert) : Wiederherstellung des Wertes einer Variablen oder den Standardwert
    * Bsp : variable(plop,10) gibt den Wert der Variablen plop 10, wenn es leer ist dan wird der standardwert genommen
- formatTime(time) : permet de formater le retour d'une chaine #time#
    * Bsp : formatTime(1650) : renverra 16h50
             
==== Code
Warnung Tags sind nicht in einem Code-Block-Typ

Befehle (Sensoren und Aktoren) ::

- cmd::byString($string);
    * Liefert das entsprechende Befehlsobjekt
    * $string => Link zum gewünschten Befehl : #[objet][equipement][commande]# (Bsp :  #[Appartement][Alarme][Actif]#)
- cmd::byId($id);
    * Liefert den entsprechende Befehlsobjekt
    * $id => Id des gewünschten Befehls (Gesamtansicht=> anzeigen)
- $cmd->BspecCmd($options = null, $cache = 1);
    * Befehl ausgühren und gibt das Ergebnis aus
    * $options => Optionen für die Befehlsausführung (kann spezifisch für das Plugin sein), Grundoption : 
          ** Unterart des Befehls : message => $option = array('title' => 'Nachrichtentitel , 'message' => 'Mon message');
                                     color => $option = array('color' => 'Farbe in Hex-');
                                     value => $option = array('color' => 'gewünschten Wert');
                                     slider => $option = array('slider' => 'gewünschten Wert von 0 bis 100');
    * $cache  => 0 = den Cache ignorieren , 1 = Normalmodus, 2 = Cache verwendet, auch wenn abgelaufen(dann mit Re-Sammlung gekennzeichnet)

Log::

- log::add('filename','level','message');
    * filename => Name der Protokolldatei
    * level => [debug],[info],[error],[event]
    * message => Nachricht in Protokoll schreiben
                           
Scénario::

- $scenario->getName();
    * Liefert den Namen des aktuellen Szenarios 
                              
- $scenario->getGroup();
    * Liefert die Szenariogruppe
                           
- $scenario->getIsActive();
    * Liefert den Status des Skripts
                              
- $scenario->setIsActive($active);
    * Aktiviert oder deaktiviert das Szenario,
    * $active => 1 aktiv , 0 nicht aktiv
                              
- $scenario->setOnGoing($onGoing);
    * Sagen wir, wenn das Szenario ausgeführt wird oder nicht,
    * $onGoing => 1 läuft, 0 gestoppt
                               
- $scenario->save();
    * Speichert Änderungen
                             
- $scenario->setData($key, $value);
    * Speichert ein Bestimmtes 
    * $key => Schlüsselwert (int oder string)
    * $value => Wert gespeichert werden soll (int, String, Array oder Objekt)
                               
- $scenario->getData($key);
    * Wiederherstellen von einem bestimmten
    * $key => Schlüsselwert (int oder string)
                             
- $scenario->removeData($key);
    * Entfernt einen bestimmten
